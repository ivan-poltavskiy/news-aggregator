version: '3'

env:
  DOCKER_IMAGE_NAME: "ivan-news-aggregator-server"
  DOCKER_IMAGE_TAG: "v1.0.18"
  DOCKERFILE_PATH: ".Dockerfile"
  DOCKER_PORT: "443"
  SERVER_EXPOSE_PORT: "443"
  HELM_CHART_NAME: "news-aggregator"
  AWS_REGION: "eu-west-2"
  AWS_ACCOUNT_ID: "406477933661"
  AWS_SERVER_IMAGE: "406477933661.dkr.ecr.eu-west-2.amazonaws.com/ivan-news-aggregator-server"

output:
  group:
    begin: '::group::{{.TASK}}'
    end: '::endgroup::'

includes:
  news-updater:
    taskfile: ./news-updater/Taskfile.yaml
    dir: ./news-updater/
  operator:
    taskfile: ./operator/Taskfile.yaml
    dir: ./operator/
  news-aggregator:
    taskfile: ./news-aggregator/Taskfile.yaml
    dir: ./news-aggregator/
  aws-auth-chart:
    taskfile: ./aws-auth-chart/Taskfile.yaml
    dir: ./aws-auth-chart

tasks:
  tidy:
    desc: "Run go mod tidy"
    cmd: go mod tidy

  mocks-generate:
    desc: "Generate mocks for the project"
    cmd: go generate ./...

  test:
    desc: "Run all tests in the project."
    deps: [ mocks-generate ]
    cmd: go test ./...

  fmt:
    desc: "go fmt on all Go files"
    cmd: go fmt ./...

  vet:
    desc: "Run go vet on all Go files"
    cmd: go vet ./...

  docker-build:
    desc: "Run docker build"
    cmd: docker build -t $DOCKER_IMAGE_NAME:$DOCKER_IMAGE_TAG -f $DOCKERFILE_PATH .

  docker-run:
    desc: "Run docker container"
    cmd: docker run -d -p $DOCKER_PORT:$SERVER_EXPOSE_PORT $DOCKER_IMAGE_NAME:$DOCKER_IMAGE_TAG

  cli-run:
    desc: "Run the CLI locally"
    cmd: go run cmd/command-line-client/main.go

  server-run:
    desc: "Run the web server locally"
    cmd: go run cmd/web/main.go

  check-all:
    desc: "Run all checks: mod tidy, fmt, tests and vet"
    cmds:
      - task: tidy
      - task: fmt
      - task: test
      - task: vet

  undeploy:
    desc: "Removes news-aggregator app from Kubernetes cluster"
    cmds:
      - kubectl delete -f templates

  docker-login:
    desc: "Login to the ECR registry"
    cmd: aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com

  aws-image-push-server:
    desc: "Build and push the image of news aggregator server to te AWS ECR"
    deps: [docker-login]
    cmds:
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
      - docker build -t $AWS_SERVER_IMAGE:$DOCKER_IMAGE_TAG -f $DOCKERFILE_PATH .
      - docker image push $AWS_SERVER_IMAGE:$DOCKER_IMAGE_TAG

  aws-auth-helm:
    desc: "Authenticate Helm with AWS ECR"
    cmds:
      - aws ecr get-login-password --region $AWS_REGION | helm registry login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com

  push-all-images-to-ecr:
    desc: "Push the Docker image and Helm charts to the ECR registry"
    deps: [docker-login]
    cmds:
      - task aws-image-push-server
      - task news-updater:aws-image-push-updater
      - task news-aggregator:push-chart
      - task operator:docker-push
      - task aws-auth-chart:push-aws-auth-chart

