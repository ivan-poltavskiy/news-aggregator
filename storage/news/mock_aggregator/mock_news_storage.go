// Code generated by MockGen. DO NOT EDIT.
// Source: storage.go

// Package mock_aggregator is a generated GoMock package.
package mock_aggregator

import (
	news "news-aggregator/entity/news"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockNewsStorage is a mock of NewsStorage interface.
type MockNewsStorage struct {
	ctrl     *gomock.Controller
	recorder *MockNewsStorageMockRecorder
}

// MockNewsStorageMockRecorder is the mock recorder for MockNewsStorage.
type MockNewsStorageMockRecorder struct {
	mock *MockNewsStorage
}

// NewMockNewsStorage creates a new mock instance.
func NewMockNewsStorage(ctrl *gomock.Controller) *MockNewsStorage {
	mock := &MockNewsStorage{ctrl: ctrl}
	mock.recorder = &MockNewsStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockNewsStorage) EXPECT() *MockNewsStorageMockRecorder {
	return m.recorder
}

// GetNews mocks base method.
func (m *MockNewsStorage) GetNews(jsonFilePath string) ([]news.News, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetNews", jsonFilePath)
	ret0, _ := ret[0].([]news.News)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetNews indicates an expected call of GetNews.
func (mr *MockNewsStorageMockRecorder) GetNews(jsonFilePath interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNews", reflect.TypeOf((*MockNewsStorage)(nil).GetNews), jsonFilePath)
}

// SaveNews mocks base method.
func (m *MockNewsStorage) SaveNews(jsonFilePath string, news []news.News) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveNews", jsonFilePath, news)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveNews indicates an expected call of SaveNews.
func (mr *MockNewsStorageMockRecorder) SaveNews(jsonFilePath, news interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveNews", reflect.TypeOf((*MockNewsStorage)(nil).SaveNews), jsonFilePath, news)
}
