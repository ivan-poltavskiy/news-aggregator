// Code generated by MockGen. DO NOT EDIT.
// Source: C:\Users\dange\GolandProjects\news-aggregator\storage\storage.go

// Package mock_aggregator is a generated GoMock package.
package mock_aggregator

import (
	source "news-aggregator/entity/source"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockStorage is a mock of Storage interface.
type MockStorage struct {
	ctrl     *gomock.Controller
	recorder *MockStorageMockRecorder
}

// MockStorageMockRecorder is the mock recorder for MockStorage.
type MockStorageMockRecorder struct {
	mock *MockStorage
}

// NewMockStorage creates a new mock instance.
func NewMockStorage(ctrl *gomock.Controller) *MockStorage {
	mock := &MockStorage{ctrl: ctrl}
	mock.recorder = &MockStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStorage) EXPECT() *MockStorageMockRecorder {
	return m.recorder
}

// DeleteSource mocks base method.
func (m *MockStorage) DeleteSource() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "DeleteSource")
}

// DeleteSource indicates an expected call of DeleteSource.
func (mr *MockStorageMockRecorder) DeleteSource() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteSource", reflect.TypeOf((*MockStorage)(nil).DeleteSource))
}

// GetSources mocks base method.
func (m *MockStorage) GetSources() ([]source.Source, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSources")
	ret0, _ := ret[0].([]source.Source)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSources indicates an expected call of GetSources.
func (mr *MockStorageMockRecorder) GetSources() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSources", reflect.TypeOf((*MockStorage)(nil).GetSources))
}

// SaveSource mocks base method.
func (m *MockStorage) SaveSource(source source.Source) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveSource", source)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveSource indicates an expected call of SaveSource.
func (mr *MockStorageMockRecorder) SaveSource(source interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveSource", reflect.TypeOf((*MockStorage)(nil).SaveSource), source)
}
